javascript:(function(){function cleanup(){document.querySelectorAll(".ac-indicator, .ac-panel").forEach((el=>el.remove()));const existingStyle=document.querySelector("#ac-styles");if(existingStyle)existingStyle.remove()}cleanup();const fragment=document.createDocumentFragment();const elements=document.querySelectorAll("input, select, textarea");const results={valid:[],invalid:[],missing:[]};const style=document.createElement("style");style.textContent=`\n    .ac-panel {\n      position: fixed;\n      top: 10px;\n      left: 10px;\n      background: #fff;\n      padding: 15px;\n      border-radius: 5px;\n      box-shadow: 0 0 10px rgba(0, 0, 0, .2);\n      z-index: 99999;\n      max-width: 250px;\n      font-family: -apple-system, system-ui, sans-serif;\n    }\n    #ac-panel-title {\n      font-size: 1.5em;\n    }\n    .ac-stats {\n      margin: 10px 0;\n      padding: 10px;\n      background: #f5f5f5;\n      border-radius: 3px;\n    }\n    .ac-stats p {\n      margin: 5px 0;\n    }\n    .ac-indicator {\n      background-color: #ff0;\n      color: #000;\n      display: block;\n      max-inline-size: fit-content;\n      padding: 2px 5px;\n      margin-top: 2px;\n      border-radius: 3px;\n      font-size: 15px;\n      font-family: monospace;\n      font-weight: bold;\n      transition: .2s;\n    }\n    .ac-valid {\n      background-color: #cfc;\n      border-left: 4px solid #4caf50;\n    }\n    .ac-invalid {\n      background-color: #fcc;\n      border-left: 4px solid #f44336;\n    }\n    .ac-missing {\n      background-color: #ffc;\n      border-left: 4px solid #ff9800;\n    }\n    .ac-hidden {\n      display: none;\n    }\n    .ac-footer {\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: center;\n    }\n    .ac-btn {\n      margin: 5px;\n      padding: 5px 10px;\n      border: none;\n      border-radius: 3px;\n      background: #0d6efd;\n      color: #fff;\n      cursor: pointer;\n    }\n    @keyframes fadeIn {\n      from {\n        opacity: 0;\n        transform: translateY(-8px);\n      }\n      to {\n        opacity: 1;\n        transform: translateY(0);\n      }\n    }\n    .ac-panel {\n      animation: fadeIn 0.5s ease-out;\n    }\n    .ac-indicator {\n      animation: fadeIn 0.3s ease-out;\n    }\n    @media (prefers-color-scheme: dark) {\n      .ac-panel {\n        background: #1e1e1e;\n        color: #f0f0f0;\n      }\n      .ac-stats {\n        background: #2c2c2c;\n      }\n      .ac-valid {\n        background-color: #4caf50;\n        border-left-color: #cfc;\n      }\n      .ac-invalid {\n        background-color: #f44336;\n        border-left-color: #fcc;\n      }\n      .ac-missing {\n        background-color: #ff9800;\n        border-left-color: #ffc;\n      }\n    }\n    body.ac-dark .ac-panel {\n      background: #1e1e1e;\n      color: #eee;\n    }\n    body.ac-dark .ac-stats {\n      background: #2c2c2c;\n    }\n    body.ac-dark .ac-valid {\n      background-color: #4caf50;\n      border-left-color: #cfc;\n    }\n    body.ac-dark .ac-invalid {\n      background-color: #f44336;\n      border-left-color: #fcc;\n    }\n    body.ac-dark .ac-missing {\n      background-color: #ff9800;\n      border-left-color: #ffc;\n    }\n  `;fragment.appendChild(style);const allowedValuesMap=new Map([["on",{category:"general",description:"Enable autocomplete",validation:"standalone"}],["off",{category:"general",description:"Disable autocomplete",validation:"standalone"}],["name",{category:"names",description:"Full name",validation:"standard"}],["given-name",{category:"names",description:"First name",validation:"standard"}],["additional-name",{category:"names",description:"Middle name",validation:"standard"}],["family-name",{category:"names",description:"Last name",validation:"standard"}],["honorific-prefix",{category:"names",description:"Title prefix (Mr., Dr., etc.)",validation:"standard"}],["honorific-suffix",{category:"names",description:"Title suffix (Jr., PhD, etc.)",validation:"standard"}],["nickname",{category:"names",description:"Nickname",validation:"standard"}],["email",{category:"contact",description:"Email address",validation:"standard"}],["tel",{category:"contact",description:"Phone number",validation:"standard"}],["url",{category:"contact",description:"Website URL",validation:"standard"}],["impp",{category:"contact",description:"Instant messaging URL",validation:"standard"}],["street-address",{category:"address",description:"Street address",validation:"standard"}],["address-line1",{category:"address",description:"Address line 1",validation:"standard"}],["address-line2",{category:"address",description:"Address line 2",validation:"standard"}],["address-line3",{category:"address",description:"Address line 3",validation:"standard"}],["address-level1",{category:"address",description:"State/Province",validation:"standard"}],["address-level2",{category:"address",description:"City",validation:"standard"}],["address-level3",{category:"address",description:"District",validation:"standard"}],["address-level4",{category:"address",description:"Neighborhood",validation:"standard"}],["country",{category:"address",description:"Country code",validation:"standard"}],["country-name",{category:"address",description:"Country name",validation:"standard"}],["postal-code",{category:"address",description:"Postal/ZIP code",validation:"standard"}],["cc-name",{category:"payment",description:"Full name on card",validation:"sensitive"}],["cc-given-name",{category:"payment",description:"First name on card",validation:"sensitive"}],["cc-additional-name",{category:"payment",description:"Middle name on card",validation:"sensitive"}],["cc-family-name",{category:"payment",description:"Last name on card",validation:"sensitive"}],["cc-number",{category:"payment",description:"Card number",validation:"sensitive"}],["cc-exp",{category:"payment",description:"Expiration date",validation:"sensitive"}],["cc-exp-month",{category:"payment",description:"Expiration month",validation:"sensitive"}],["cc-exp-year",{category:"payment",description:"Expiration year",validation:"sensitive"}],["cc-csc",{category:"payment",description:"Security code",validation:"sensitive"}],["cc-type",{category:"payment",description:"Card type",validation:"sensitive"}],["transaction-currency",{category:"payment",description:"Transaction currency",validation:"sensitive"}],["transaction-amount",{category:"payment",description:"Transaction amount",validation:"sensitive"}],["bday",{category:"personal",description:"Full birthday",validation:"standard"}],["bday-day",{category:"personal",description:"Birthday day",validation:"standard"}],["bday-month",{category:"personal",description:"Birthday month",validation:"standard"}],["bday-year",{category:"personal",description:"Birthday year",validation:"standard"}],["sex",{category:"personal",description:"Biological sex",validation:"standard"}],["organization",{category:"personal",description:"Company name",validation:"standard"}],["organization-title",{category:"personal",description:"Job title",validation:"standard"}],["language",{category:"personal",description:"Preferred language",validation:"standard"}],["photo",{category:"personal",description:"Photo URL",validation:"standard"}],["username",{category:"credentials",description:"Username",validation:"sensitive"}],["new-password",{category:"credentials",description:"New password",validation:"sensitive"}],["current-password",{category:"credentials",description:"Current password",validation:"sensitive"}],["one-time-code",{category:"credentials",description:"One-time code",validation:"sensitive"}],["tel-country-code",{category:"phone",description:"Country code",validation:"standard"}],["tel-national",{category:"phone",description:"National number",validation:"standard"}],["tel-area-code",{category:"phone",description:"Area code",validation:"standard"}],["tel-local",{category:"phone",description:"Local number",validation:"standard"}],["tel-local-prefix",{category:"phone",description:"First part of local number",validation:"standard"}],["tel-local-suffix",{category:"phone",description:"Last part of local number",validation:"standard"}],["tel-extension",{category:"phone",description:"Extension number",validation:"standard"}]]);const allowedSectionsMap=new Map([["shipping",{type:"address-contact-only",description:"Shipping address or contact information only",validFields:new Set(["name","given-name","additional-name","family-name","honorific-prefix","honorific-suffix","street-address","address-line1","address-line2","address-line3","address-level1","address-level2","address-level3","address-level4","country","country-name","postal-code","tel","tel-country-code","tel-national","tel-area-code","tel-local","tel-local-prefix","tel-local-suffix","tel-extension","email"])}],["billing",{type:"address-contact-only",description:"Billing address or contact information only",validFields:new Set(["name","given-name","additional-name","family-name","honorific-prefix","honorific-suffix","street-address","address-line1","address-line2","address-line3","address-level1","address-level2","address-level3","address-level4","country","country-name","postal-code","tel","tel-country-code","tel-national","tel-area-code","tel-local","tel-local-prefix","tel-local-suffix","tel-extension","email"])}],["home",{validFields:new Set(["tel","tel-country-code","tel-national","tel-area-code","tel-local","tel-local-prefix","tel-local-suffix","tel-extension","email","impp"])}],["work",{validFields:new Set(["tel","tel-country-code","tel-national","tel-area-code","tel-local","tel-local-prefix","tel-local-suffix","tel-extension","email","impp"])}],["mobile",{validFields:new Set(["tel","tel-country-code","tel-national","tel-area-code","tel-local","tel-local-prefix","tel-local-suffix","tel-extension"])}],["fax",{validFields:new Set(["tel","tel-country-code","tel-national","tel-area-code","tel-local","tel-local-prefix","tel-local-suffix","tel-extension"])}],["pager",{validFields:new Set(["tel","tel-country-code","tel-national","tel-area-code","tel-local","tel-local-prefix","tel-local-suffix","tel-extension"])}]]);function containsNonASCII(str){return/[^\x00-\x7F]/.test(str)}function hasExtraWhitespace(str){return/[ ]{2,}|\t/.test(str)}function validateAutocomplete(value){if(!value)return{isValid:false,message:"Empty value"};if(value.match(/[\x00-\x1F\x7F]/)){return{isValid:false,message:"Invalid: autocomplete value cannot contain control characters"}}if(value.match(/[<>&]|&lt;|&gt;|&amp;/)){return{isValid:false,message:"Invalid: autocomplete value cannot contain HTML special characters"}}if(value.includes("\n")||value.includes("\r")){return{isValid:false,message:"Invalid: autocomplete value cannot contain line breaks"}}if(value.trim()!==value){return{isValid:false,message:"Leading or trailing spaces are not allowed"}}if(value.startsWith("-")){return{isValid:false,message:"Invalid: autocomplete value cannot start with a hyphen"}}const rawValue=value.toLowerCase();if(rawValue.match(/section [- ]/)){return{isValid:false,message:'Invalid: no space allowed in "section-" prefix (format must be "section-" immediately followed by value)'}}if(rawValue.includes("section--")){return{isValid:false,message:'Invalid: section prefix must have exactly one hyphen (format must be "section-")'}}if(rawValue.includes("section- ")||rawValue.includes("section-\t")){return{isValid:false,message:"Invalid: section prefix must be followed by a value (section-billing, section-shipping, etc.)"}}const hasInvalidSectionPrefix=value.toLowerCase().split(" ").some((part=>(part.startsWith("sect-")||part.startsWith("sections-"))&&!part.startsWith("section-")));if(hasInvalidSectionPrefix){return{isValid:false,message:'Invalid: section prefix must be exactly "section-"',suggestion:value.replace(/(sect|sections)-/,"section-")}}const hasSectionWithoutHyphen=value.toLowerCase().split(" ").some((part=>part.startsWith("section")&&part.length>7&&part.charAt(7)!=="-"));if(hasSectionWithoutHyphen){return{isValid:false,message:"Invalid: section prefix must include a hyphen (section-)",suggestion:value.replace("section","section-")}}const hasNonCanonicalCase=value!==value.toLowerCase();const parts=value.toLowerCase().split(/[ \t]+/).filter(Boolean);const firstToken=parts[0];const sections=parts.filter((part=>part.startsWith("section-")));if(sections.length>1){return{isValid:false,message:"Multiple section-* prefixes are not allowed"}}const sectionTokens=parts.filter((part=>part.startsWith("section-")));if(sectionTokens.length>0){if(!parts[0].startsWith("section-")){return{isValid:false,message:"Invalid: section-* prefix must be at the start of the autocomplete attribute",suggestion:`${sectionTokens[0]} ${parts.filter((part=>!part.startsWith("section-"))).join(" ")}`}}}if(!allowedSectionsMap.has(firstToken)&&!(firstToken.startsWith("section-")&&firstToken.length>8)&&!allowedValuesMap.has(firstToken)&&!["on","off"].includes(firstToken)){if(firstToken.startsWith("section")){return{isValid:false,message:'Invalid: "section-" must be immediately followed by a value (no spaces after the hyphen)'}}return{isValid:false,message:`Invalid: "${firstToken}" is not a valid autocomplete token`}}if(["on","off"].includes(parts[0])){return{isValid:parts.length===1,message:parts.length>1?"'on' and 'off' must be used alone":hasNonCanonicalCase?`Valid value (canonical form: ${value.toLowerCase()})`:"Valid value"}}const standardSections=parts.filter((part=>allowedSectionsMap.has(part)));if(standardSections.length>1){return{isValid:false,message:"Multiple sections are not allowed"}}if(parts[0].startsWith("section-")){if(parts[0].includes('"')||parts[0].includes("'")){return{isValid:false,message:"Invalid: section name cannot contain quotes"}}if(containsNonASCII(parts[0])){return{isValid:false,message:"Invalid: section name must contain only ASCII characters"}}const lastToken=parts[parts.length-1];const isValid=parts.length>=2&&allowedValuesMap.has(lastToken);const hasExtraSpaces=hasExtraWhitespace(value);const canonicalForm=parts.join(" ");return{isValid:isValid,message:parts.length<2?`Invalid: "${parts[0]}" must be followed by a valid field name`:!isValid?`Invalid: "${lastToken}" is not a valid field name`:hasExtraSpaces?`Valid but contains extra whitespace (canonical form: ${canonicalForm})`:hasNonCanonicalCase?`Valid section (canonical form: ${value.toLowerCase()})`:"Valid section"}}if(allowedSectionsMap.has(parts[0])){const section=allowedSectionsMap.get(parts[0]);const isValidSection=parts.length>=2&&section.validFields.has(parts[parts.length-1]);return{isValid:isValidSection,message:parts.length<2?`Invalid: "${parts[0]}" section must be followed by a valid field (name, address, etc.)`:isValidSection?hasNonCanonicalCase?`Valid combined value (canonical form: ${value.toLowerCase()})`:"Valid combined value":`Invalid: ${parts[0]} can only be combined with address or contact information`}}const isValid=allowedValuesMap.has(parts[0]);return{isValid:isValid,message:isValid?hasNonCanonicalCase?`Valid value (canonical form: ${value.toLowerCase()})`:"Valid value":"Invalid value"}}elements.forEach((function(element){if(element.hasAttribute("autocomplete")){const value=element.getAttribute("autocomplete");const validation=validateAutocomplete(value);validation.isValid?results.valid.push(element):results.invalid.push(element)}else{results.missing.push(element)}}));const panel=document.createElement("div");panel.className="ac-panel";panel.setAttribute("role","region");panel.setAttribute("aria-labelledby","ac-panel-title");panel.innerHTML=`\n    <p id="ac-panel-title">detectAutocomplete</p>\n    <div class="ac-stats">\n      <p>Total: ${elements.length}</p>\n      <p>Valid: ${results.valid.length}</p>\n      <p>Invalid: ${results.invalid.length}</p>\n      <p>Missing: ${results.missing.length}</p>\n    </div>\n    <div class="ac-footer">\n      <button class="ac-btn" id="ac-toggle">Hide/Display</button>\n      <button class="ac-btn" id="ac-cleanup">Remove all</button>\n      <button class="ac-btn" id="ac-theme">Dark/Light</button>\n      <button class="ac-btn" id="ac-export">Export to CSV</button>\n    </div>\n  `;fragment.appendChild(panel);requestAnimationFrame((()=>{elements.forEach((function(element){const label=document.createElement("p");label.className="ac-indicator";if(element.hasAttribute("autocomplete")){const value=element.getAttribute("autocomplete");const validation=validateAutocomplete(value);const parts=value.toLowerCase().split(" ").filter(Boolean);const valueSpan=document.createElement("span");valueSpan.textContent=`autocomplete="${value}"`;const statusSpan=document.createElement("span");statusSpan.setAttribute("role",validation.isValid?"status":"alert");statusSpan.textContent=validation.isValid?" Valid":" Invalid";if(parts.length>1){statusSpan.textContent+=` (Combined: ${parts.join(" + ")})`}label.appendChild(valueSpan);label.appendChild(statusSpan);label.setAttribute("data-details",validation.message);label.className+=validation.isValid?" ac-valid":" ac-invalid"}else{label.textContent="autocomplete missing";label.className+=" ac-missing";label.setAttribute("data-details","Autocomplete attribute recommended")}element.parentNode.insertBefore(label,element.nextSibling)}))}));function exportToCSV(){const header="Tag,Name,Type,Autocomplete,Status,Validation Message,Data Details,Value\n";const csv=header+Array.from(elements).map((el=>{const autocomplete=el.getAttribute("autocomplete")||"missing";const validation=autocomplete!=="missing"?validateAutocomplete(autocomplete):{isValid:false,message:"Missing autocomplete attribute"};const status=validation.isValid?"Valid":"Invalid";const indicator=el.nextElementSibling;const dataDetails=indicator&&indicator.classList.contains("ac-indicator")?(indicator.getAttribute("data-details")||"").replace(/,/g,";"):"No details";return[el.tagName.toLowerCase(),el.name||"no-name",el.type||"no-type",autocomplete,status,validation.message.replace(/,/g,";"),dataDetails,el.value||"empty"].join(",")})).join("\n");const blob=new Blob([csv],{type:"text/csv"});const url=URL.createObjectURL(blob);const a=document.createElement("a");a.href=url;a.download=`autocomplete-audit-${(new Date).toISOString().slice(0,10)}.csv`;a.click();URL.revokeObjectURL(url)}requestAnimationFrame((()=>{document.body.appendChild(fragment);const toggleButton=document.getElementById("ac-toggle");if(toggleButton){toggleButton.addEventListener("click",(()=>{requestAnimationFrame((()=>{document.querySelectorAll(".ac-indicator").forEach((el=>el.classList.toggle("ac-hidden")))}))}))}const themeButton=document.getElementById("ac-theme");if(themeButton){themeButton.addEventListener("click",(()=>{requestAnimationFrame((()=>{document.body.classList.toggle("ac-dark")}))}))}const exportButton=document.getElementById("ac-export");if(exportButton){exportButton.addEventListener("click",exportToCSV)}const cleanupButton=document.getElementById("ac-cleanup");if(cleanupButton){cleanupButton.addEventListener("click",cleanup)}}))})();